apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "wordpress-bedrock.fullname" . }}
  labels:
{{ include "wordpress-bedrock.labels" . | indent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook-weight": "0"
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  php-fpm.conf: |-
    [global]

    error_log = /proc/self/fd/2
    daemonize = no

    [www]

    ; if we send this to /proc/self/fd/1, it never appears
    access.log = /proc/self/fd/2

    user = www-data
    group = www-data

    listen = [::]:9000

    pm = dynamic
    pm.max_children = {{ .Values.php.fpm.pm.max_children }}
    pm.start_servers = {{ .Values.php.fpm.pm.start_servers }}
    pm.min_spare_servers = {{ .Values.php.fpm.pm.min_spare_servers }}
    pm.max_spare_servers = {{ .Values.php.fpm.pm.max_spare_servers }}

    pm.status_path = /fpm-status
    ping.path = /fpm-ping

    clear_env = no

    ; Ensure worker stdout and stderr are sent to the main error log.
    catch_workers_output = yes

    {{- range $key, $value := .Values.php.php_admin_value }}
    php_admin_value[{{ $key }}] = {{ $value }}
    {{- end }}
  nginx-default.conf: |-
    upstream php-backend {
        server 127.0.0.1:9000 max_conns={{ .Values.php.fpm.pm.max_children }};
    }

    server_tokens off;

    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;

    {{ $length := len $.Values.nginx.cors_origins }} {{ if gt $length 0 }}
    map $http_origin $cors_origin_header {
      default "";
      {{- range $value := $.Values.nginx.cors_origins }}
      "{{ $value }}" "$http_origin";{{ end }}
    }

    map $http_origin $cors_cred {
      default "";
      {{- range $value := $.Values.nginx.cors_origins }}
      "{{ $value }}" "true";{{ end }}
    }
    {{ end }}

    server {
        listen       8080;
        server_name {{ index $.Values.ingress.hosts 0 "host" | quote }};
        root /var/www/html/web;
        index index.php;

        server_name_in_redirect off;
        port_in_redirect off;
        absolute_redirect off;

        keepalive_timeout 20;

        # gzip compression
        gzip on;
        gzip_comp_level    5;
        gzip_min_length    256;
        gzip_proxied       any;
        gzip_vary          on;
        gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

        client_max_body_size {{ .Values.nginx.client_max_body_size }};

        {{ $length := len $.Values.nginx.cors_origins }} {{ if gt $length 0 }}
        # CORS headers
        add_header Access-Control-Allow-Origin $cors_origin_header always;
        add_header Access-Control-Allow-Credentials $cors_cred;
        add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";

        if ($request_method = 'OPTIONS' ) {
          return 204 no-content;
        }
        {{ end }}

        # default files forbidden due to version info
        location ^~ /readme.html {
          return 403;
        }
        location ^~ /license.html {
          return 403;
        }

        {{ if .Values.nginx.disallow_robots }}
        # deny robot access
        location = /robots.txt {
          return 200 "User-agent: *\nDisallow: /";
        }
        {{ end }}

        # private files
        location ^~ /wp-config {
          return 403;
        }
        location ^~ /wp/wp-config {
          return 403;
        }
        location ^~ /wp/wp-settings {
          return 403;
        }
        location ^~ /wp/wp-cron {
          return 403;
        }
        location ^~ /wp/wp-load {
          return 403;
        }
        location ^~ /wp/xmlrpc {
          return 403;
        }

        {{ if .Values.offload.cloudfront }}
        {{ if .Values.efs.enabled }}
        location ^~ /app/uploads/et-cache/ {
          index  index.php index.html index.htm;
          try_files $uri $uri/ /index.php?path=$uri&$args;
        }
        location ^~ /wp-content/uploads/et-cache/ {
          index  index.php index.html index.htm;
          try_files $uri $uri/ /index.php?path=$uri&$args;
        }
        location ^~ /wp/wp-content/uploads/et-cache/ {
          index  index.php index.html index.htm;
          try_files $uri $uri/ /index.php?path=$uri&$args;
        }
        {{ end }}
        # offload uploads to s3
        location ^~ /app/uploads/ {
          rewrite "^/app/uploads/(.*)$" "https://{{ .Values.offload.cloudfront }}/wp-content/uploads/$1" break;
        }
        location ^~ /wp/wp-content/uploads/ {
          rewrite "^/wp/wp-content/uploads/(.*)$" "https://{{ .Values.offload.cloudfront }}/wp-content/uploads/$1" break;
        }
        location ^~ /wp-content/uploads/ {
          rewrite "^/wp-content/uploads/(.*)$" "https://{{ .Values.offload.cloudfront }}/wp-content/uploads/$1" break;
        }
        {{ end }}

        {{ if .Values.nginx.additional_config }}
        {{ .Values.nginx.additional_config | nindent 8 }}
        {{ end }}

        access_log /dev/stdout main;
        error_log /dev/stderr;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location / {
            index  index.php index.html index.htm;
            try_files $uri $uri/ /index.php?path=$uri&$args;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_pass   php-backend;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
          #access_log off;
          log_not_found off;
          expires max;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
          deny all;
        }

        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~* /(?:uploads|files)/.*\.php$ {
          deny all;
        }

        # fpm monitor
        location ~ /fpm-(status|ping) {
          fastcgi_pass php-backend;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          include fastcgi_params;
          access_log off;
          allow 127.0.0.1;
          deny all;
        }

        # nginx monitor
        location ~ /nginx-status {
          stub_status on;
          access_log off;
          allow 127.0.0.1;
          allow 10.0.0.0/8;
          allow 172.16.0.0/12;
          allow 192.168.0.0/16;
          deny all;
        }

        # nginx ping
        location ~ /nginx-ping {
          return 200 "pong";
          access_log off;
          allow 127.0.0.1;
          allow 10.0.0.0/8;
          allow 172.16.0.0/12;
          allow 192.168.0.0/16;
          deny all;
        }

    }
